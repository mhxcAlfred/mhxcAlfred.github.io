<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡心小筑</title>
  
  <subtitle>随笔   |   札记</subtitle>
  <link href="https://blog.mhxcalfred.com/atom.xml" rel="self"/>
  
  <link href="https://blog.mhxcalfred.com/"/>
  <updated>2024-02-19T04:12:58.000Z</updated>
  <id>https://blog.mhxcalfred.com/</id>
  
  <author>
    <name>_mhxcAlfred</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>立春</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/f3beac28ec8f/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/f3beac28ec8f/</id>
    <published>2024-02-04T08:26:53.000Z</published>
    <updated>2024-02-19T04:12:58.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>立春</p></div><div style="text-align:center;">  <img src="/zh-CN/f3beac28ec8f/202402040001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、立春&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="立春" scheme="https://blog.mhxcalfred.com/tags/%E7%AB%8B%E6%98%A5/"/>
    
  </entry>
  
  <entry>
    <title>力扣00918.环形子数组的最大和</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/efb5d27e493a/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/efb5d27e493a/</id>
    <published>2024-02-01T03:15:00.000Z</published>
    <updated>2024-02-01T03:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个长度为 n 的环形整数数组 nums ，返回 nums 的非空 子数组 的最大可能和 。</p><p>环形数组 意味着数组的末端将会与开头相连呈环状。形式上， nums[i] 的下一个元素是 nums[(i + 1) % n] ， nums[i] 的前一个元素是 nums[(i - 1 + n) % n] 。</p><p>子数组 最多只能包含固定缓冲区 nums 中的每个元素一次。形式上，对于子数组 nums[i], nums[i + 1], …, nums[j] ，不存在 i &lt;&#x3D; k1, k2 &lt;&#x3D; j 其中 k1 % n &#x3D;&#x3D; k2 % n 。</p><h2 id="示例-1："><a href="#示例-1：" class="headerlink" title="示例 1："></a>示例 1：</h2><blockquote><p>输入：nums &#x3D; [1,-2,3,-2]<br>输出：3<br>解释：从子数组 [3] 得到最大和 3</p></blockquote><h2 id="示例-2："><a href="#示例-2：" class="headerlink" title="示例 2："></a>示例 2：</h2><blockquote><p>输入：nums &#x3D; [5,-3,5]<br>输出：10<br>解释：从子数组 [5,5] 得到最大和 5 + 5 &#x3D; 10</p></blockquote><h2 id="示例-3："><a href="#示例-3：" class="headerlink" title="示例 3："></a>示例 3：</h2><blockquote><p>输入：nums &#x3D; [3,-2,2,-3]<br>输出：3<br>解释：从子数组 [3] 和 [3,-2,2] 都可以得到最大和 3</p></blockquote><h2 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h2><ul><li>n &#x3D;&#x3D; nums.length</li><li>$1 &lt;&#x3D; n &lt;&#x3D; 3 * 10^4$</li><li>$-3 * 10^4 &lt;&#x3D; nums[i] &lt;&#x3D; 3 * 10^4​​​​​​​$</li></ul><hr><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><h2 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxSubarraySumCircular</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> total_sum = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> max_not_circular = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> current_sum = nums[<span class="number">0</span>];</span><br><span class="line">        total_sum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            current_sum = <span class="built_in">max</span>(nums[i], current_sum + nums[i]);</span><br><span class="line">            max_not_circular = <span class="built_in">max</span>(max_not_circular, current_sum);</span><br><span class="line">            total_sum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> min_not_circular = nums[<span class="number">0</span>];</span><br><span class="line">        current_sum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            current_sum = <span class="built_in">min</span>(nums[i], current_sum + nums[i]);</span><br><span class="line">            min_not_circular = <span class="built_in">min</span>(min_not_circular, current_sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> max_circular = total_sum - min_not_circular;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(max_not_circular, max_circular);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 35 ms, 击败 98.90% 使用 C++ 的用户</p><p>内存消耗 : 41.28 MB, 击败 48.71% 使用 C++ 的用户</p><hr><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxSubarraySumCircular</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">totalSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxNotCircular</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">currentSum</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        totalSum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            currentSum = Math.max(nums[i], currentSum + nums[i]);</span><br><span class="line">            maxNotCircular = Math.max(maxNotCircular, currentSum);</span><br><span class="line">            totalSum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">minNotCircular</span> <span class="operator">=</span> nums[<span class="number">0</span>];</span><br><span class="line">        currentSum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            currentSum = Math.min(nums[i], currentSum + nums[i]);</span><br><span class="line">            minNotCircular = Math.min(minNotCircular, currentSum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxCircular</span> <span class="operator">=</span> totalSum - minNotCircular;</span><br><span class="line">        <span class="keyword">return</span> Math.max(maxNotCircular, maxCircular);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 4 ms, 击败 95.31% 使用 Java 的用户</p><p>内存消耗 : 48.11 MB, 击败 14.36% 使用 Java 的用户</p><hr><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxSubarraySumCircular</span>(<span class="params">self, nums</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>]</span><br><span class="line">        total_sum = <span class="number">0</span></span><br><span class="line">        max_not_circular = current_sum = nums[<span class="number">0</span>]</span><br><span class="line">        total_sum = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">            current_sum = <span class="built_in">max</span>(nums[i], current_sum + nums[i])</span><br><span class="line">            max_not_circular = <span class="built_in">max</span>(max_not_circular, current_sum)</span><br><span class="line">            total_sum += nums[i]</span><br><span class="line">        min_not_circular = current_sum = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n - <span class="number">1</span>):</span><br><span class="line">            current_sum = <span class="built_in">min</span>(nums[i], current_sum + nums[i])</span><br><span class="line">            min_not_circular = <span class="built_in">min</span>(min_not_circular, current_sum)</span><br><span class="line">        max_circular = total_sum - min_not_circular</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(max_not_circular, max_circular)</span><br></pre></td></tr></table></figure><h3 id="结果-2"><a href="#结果-2" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 114 ms, 击败 60.26% 使用 Python 的用户</p><p>内存消耗 : 14.08 MB, 击败 94.87% 使用 Python 的用户</p><hr><h2 id="Python3"><a href="#Python3" class="headerlink" title="Python3"></a>Python3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxSubarraySumCircular</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>]</span><br><span class="line">        total_sum = <span class="number">0</span></span><br><span class="line">        max_not_circular = current_sum = nums[<span class="number">0</span>]</span><br><span class="line">        total_sum = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">            current_sum = <span class="built_in">max</span>(nums[i], current_sum + nums[i])</span><br><span class="line">            max_not_circular = <span class="built_in">max</span>(max_not_circular, current_sum)</span><br><span class="line">            total_sum += nums[i]</span><br><span class="line">        min_not_circular = current_sum = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n - <span class="number">1</span>):</span><br><span class="line">            current_sum = <span class="built_in">min</span>(nums[i], current_sum + nums[i])</span><br><span class="line">            min_not_circular = <span class="built_in">min</span>(min_not_circular, current_sum)</span><br><span class="line">        max_circular = total_sum - min_not_circular</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(max_not_circular, max_circular)</span><br></pre></td></tr></table></figure><h3 id="结果-3"><a href="#结果-3" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 165 ms, 击败 57.73% 使用 Python3 的用户</p><p>内存消耗 : 20.53 MB, 击败 51.03% 使用 Python3 的用户</p><hr><h2 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">maxSubarraySumCircular</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (numsSize == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> totalSum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> maxNotCircular = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="type">int</span> currentSum = nums[<span class="number">0</span>];</span><br><span class="line">    totalSum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; numsSize; ++i) &#123;</span><br><span class="line">        currentSum = (nums[i] &gt; currentSum + nums[i]) ? nums[i] : currentSum + nums[i];</span><br><span class="line">        maxNotCircular = (maxNotCircular &gt; currentSum) ? maxNotCircular : currentSum;</span><br><span class="line">        totalSum += nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> minNotCircular = nums[<span class="number">0</span>];</span><br><span class="line">    currentSum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; numsSize - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        currentSum = (nums[i] &lt; currentSum + nums[i]) ? nums[i] : currentSum + nums[i];</span><br><span class="line">        minNotCircular = (minNotCircular &lt; currentSum) ? minNotCircular : currentSum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> maxCircular = totalSum - minNotCircular;</span><br><span class="line">    <span class="keyword">return</span> (maxNotCircular &gt; maxCircular) ? maxNotCircular : maxCircular;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-4"><a href="#结果-4" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 46 ms, 击败 98.08% 使用 C 的用户</p><p>内存消耗 : 8.07 MB, 击败 100.00% 使用 C 的用户</p><hr><h2 id="C-2"><a href="#C-2" class="headerlink" title="C#"></a>C#</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Solution</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">MaxSubarraySumCircular</span>(<span class="params"><span class="built_in">int</span>[] nums</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">int</span> n = nums.Length;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> totalSum = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> maxNotCircular = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">int</span> currentSum = nums[<span class="number">0</span>];</span><br><span class="line">        totalSum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            currentSum = Math.Max(nums[i], currentSum + nums[i]);</span><br><span class="line">            maxNotCircular = Math.Max(maxNotCircular, currentSum);</span><br><span class="line">            totalSum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> minNotCircular = nums[<span class="number">0</span>];</span><br><span class="line">        currentSum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            currentSum = Math.Min(nums[i], currentSum + nums[i]);</span><br><span class="line">            minNotCircular = Math.Min(minNotCircular, currentSum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> maxCircular = totalSum - minNotCircular;</span><br><span class="line">        <span class="keyword">return</span> Math.Max(maxNotCircular, maxCircular);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-5"><a href="#结果-5" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 162 ms, 击败 52.17% 使用 C# 的用户</p><p>内存消耗 : 51.75 MB, 击败 26.09% 使用 C# 的用户</p><hr><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxSubarraySumCircular = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> n = nums.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> totalSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> maxNotCircular = currentSum = nums[<span class="number">0</span>];</span><br><span class="line">    totalSum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        currentSum = <span class="title class_">Math</span>.<span class="title function_">max</span>(nums[i], currentSum + nums[i]);</span><br><span class="line">        maxNotCircular = <span class="title class_">Math</span>.<span class="title function_">max</span>(maxNotCircular, currentSum);</span><br><span class="line">        totalSum += nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> minNotCircular = currentSum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        currentSum = <span class="title class_">Math</span>.<span class="title function_">min</span>(nums[i], currentSum + nums[i]);</span><br><span class="line">        minNotCircular = <span class="title class_">Math</span>.<span class="title function_">min</span>(minNotCircular, currentSum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> maxCircular = totalSum - minNotCircular;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(maxNotCircular, maxCircular);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="结果-6"><a href="#结果-6" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 70 ms, 击败 84.03% 使用 JavaScript 的用户</p><p>内存消耗 : 54.27 MB, 击败 24.31% 使用 JavaScript 的用户</p><hr><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">maxSubarraySumCircular</span>(<span class="params">nums: <span class="built_in">number</span>[]</span>): <span class="built_in">number</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">n</span>: <span class="built_in">number</span> = nums.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">totalSum</span>: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">maxNotCircular</span>: <span class="built_in">number</span> = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">currentSum</span>: <span class="built_in">number</span> = nums[<span class="number">0</span>];</span><br><span class="line">    totalSum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        currentSum = <span class="title class_">Math</span>.<span class="title function_">max</span>(nums[i], currentSum + nums[i]);</span><br><span class="line">        maxNotCircular = <span class="title class_">Math</span>.<span class="title function_">max</span>(maxNotCircular, currentSum);</span><br><span class="line">        totalSum += nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">minNotCircular</span>: <span class="built_in">number</span> = currentSum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        currentSum = <span class="title class_">Math</span>.<span class="title function_">min</span>(nums[i], currentSum + nums[i]);</span><br><span class="line">        minNotCircular = <span class="title class_">Math</span>.<span class="title function_">min</span>(minNotCircular, currentSum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">maxCircular</span>: <span class="built_in">number</span> = totalSum - minNotCircular;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(maxNotCircular, maxCircular);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-7"><a href="#结果-7" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 58 ms, 击败 100.00% 使用 TypeScript 的用户</p><p>内存消耗 : 55.74 MB, 击败 26.32% 使用 TypeScript 的用户</p><hr><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer[] $nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">maxSubarraySumCircular</span>(<span class="params"><span class="variable">$nums</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$n</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$nums</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$n</span> == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$nums</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$totalSum</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$maxNotCircular</span> = <span class="variable">$currentSum</span> = <span class="variable">$nums</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="variable">$totalSum</span> = <span class="variable">$nums</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">            <span class="variable">$currentSum</span> = <span class="title function_ invoke__">max</span>(<span class="variable">$nums</span>[<span class="variable">$i</span>], <span class="variable">$currentSum</span> + <span class="variable">$nums</span>[<span class="variable">$i</span>]);</span><br><span class="line">            <span class="variable">$maxNotCircular</span> = <span class="title function_ invoke__">max</span>(<span class="variable">$maxNotCircular</span>, <span class="variable">$currentSum</span>);</span><br><span class="line">            <span class="variable">$totalSum</span> += <span class="variable">$nums</span>[<span class="variable">$i</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$minNotCircular</span> = <span class="variable">$currentSum</span> = <span class="variable">$nums</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span> - <span class="number">1</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">            <span class="variable">$currentSum</span> = <span class="title function_ invoke__">min</span>(<span class="variable">$nums</span>[<span class="variable">$i</span>], <span class="variable">$currentSum</span> + <span class="variable">$nums</span>[<span class="variable">$i</span>]);</span><br><span class="line">            <span class="variable">$minNotCircular</span> = <span class="title function_ invoke__">min</span>(<span class="variable">$minNotCircular</span>, <span class="variable">$currentSum</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$maxCircular</span> = <span class="variable">$totalSum</span> - <span class="variable">$minNotCircular</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">max</span>(<span class="variable">$maxNotCircular</span>, <span class="variable">$maxCircular</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-8"><a href="#结果-8" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 118 ms, 击败 100.00% 使用 PHP 的用户</p><p>内存消耗 : 22.12 MB, 击败 50.00% 使用 PHP 的用户</p><hr><h2 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">maxSubarraySumCircular</span>(<span class="keyword">_</span> <span class="params">nums</span>: [<span class="type">Int</span>]) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> n <span class="operator">=</span> nums.count</span><br><span class="line">        <span class="keyword">if</span> n <span class="operator">==</span> <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> totalSum <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> maxNotCircular <span class="operator">=</span> nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">var</span> currentSum <span class="operator">=</span> nums[<span class="number">0</span>]</span><br><span class="line">        totalSum <span class="operator">=</span> nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span><span class="operator">..&lt;</span>n &#123;</span><br><span class="line">            currentSum <span class="operator">=</span> <span class="built_in">max</span>(nums[i], currentSum <span class="operator">+</span> nums[i])</span><br><span class="line">            maxNotCircular <span class="operator">=</span> <span class="built_in">max</span>(maxNotCircular, currentSum)</span><br><span class="line">            totalSum <span class="operator">+=</span> nums[i]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> minNotCircular <span class="operator">=</span> nums[<span class="number">0</span>]</span><br><span class="line">        currentSum <span class="operator">=</span> nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span><span class="operator">..&lt;</span>n <span class="operator">-</span> <span class="number">1</span> &#123;</span><br><span class="line">            currentSum <span class="operator">=</span> <span class="built_in">min</span>(nums[i], currentSum <span class="operator">+</span> nums[i])</span><br><span class="line">            minNotCircular <span class="operator">=</span> <span class="built_in">min</span>(minNotCircular, currentSum)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> maxCircular <span class="operator">=</span> totalSum <span class="operator">-</span> minNotCircular</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(maxNotCircular, maxCircular)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-9"><a href="#结果-9" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 165 ms, 击败 100.00% 使用 Swift 的用户</p><p>内存消耗 : 15.92 MB, 击败 57.14% 使用 Swift 的用户</p><hr><h2 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">maxSubarraySumCircular</span><span class="params">(nums: <span class="type">IntArray</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        <span class="keyword">val</span> n = nums.size</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> totalSum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> maxNotCircular = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">var</span> currentSum = nums[<span class="number">0</span>]</span><br><span class="line">        totalSum = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span> until n) &#123;</span><br><span class="line">            currentSum = maxOf(nums[i], currentSum + nums[i])</span><br><span class="line">            maxNotCircular = maxOf(maxNotCircular, currentSum)</span><br><span class="line">            totalSum += nums[i]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> minNotCircular = nums[<span class="number">0</span>]</span><br><span class="line">        currentSum = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span> until n - <span class="number">1</span>) &#123;</span><br><span class="line">            currentSum = minOf(nums[i], currentSum + nums[i])</span><br><span class="line">            minNotCircular = minOf(minNotCircular, currentSum)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">val</span> maxCircular = totalSum - minNotCircular</span><br><span class="line">        <span class="keyword">return</span> maxOf(maxNotCircular, maxCircular)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-10"><a href="#结果-10" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 288 ms, 击败 75.00% 使用 Kotlin 的用户</p><p>内存消耗 : 42.78 MB, 击败 66.67% 使用 Kotlin 的用户</p><hr><h2 id="Dart"><a href="#Dart" class="headerlink" title="Dart"></a>Dart</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> maxSubarraySumCircular(<span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; nums) &#123;</span><br><span class="line">    <span class="built_in">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> totalSum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">int</span> maxNotCircular = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">int</span> currentSum = nums[<span class="number">0</span>];</span><br><span class="line">    totalSum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">      currentSum = nums[i] &gt; currentSum + nums[i] ? nums[i] : currentSum + nums[i];</span><br><span class="line">      maxNotCircular = maxNotCircular &gt; currentSum ? maxNotCircular : currentSum;</span><br><span class="line">      totalSum += nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> minNotCircular = nums[<span class="number">0</span>];</span><br><span class="line">    currentSum = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">      currentSum = nums[i] &lt; currentSum + nums[i] ? nums[i] : currentSum + nums[i];</span><br><span class="line">      minNotCircular = minNotCircular &lt; currentSum ? minNotCircular : currentSum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> maxCircular = totalSum - minNotCircular;</span><br><span class="line">    <span class="keyword">return</span> maxNotCircular &gt; maxCircular ? maxNotCircular : maxCircular;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-11"><a href="#结果-11" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 340 ms, 击败 -% 使用 Dart 的用户</p><p>内存消耗 : 154.35 MB, 击败 -% 使用 Dart 的用户</p><hr><h2 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxSubarraySumCircular</span><span class="params">(nums []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">n := <span class="built_in">len</span>(nums)</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">1</span> &#123;</span><br><span class="line"><span class="keyword">return</span> nums[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line">totalSum := <span class="number">0</span></span><br><span class="line">maxNotCircular := nums[<span class="number">0</span>]</span><br><span class="line">currentSum := nums[<span class="number">0</span>]</span><br><span class="line">totalSum = nums[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line">currentSum = max(nums[i], currentSum+nums[i])</span><br><span class="line">maxNotCircular = max(maxNotCircular, currentSum)</span><br><span class="line">totalSum += nums[i]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> minNotCircular <span class="type">int</span></span><br><span class="line">currentSum = nums[<span class="number">0</span>]</span><br><span class="line">minNotCircular = currentSum</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n<span class="number">-1</span>; i++ &#123;</span><br><span class="line">currentSum = min(nums[i], currentSum+nums[i])</span><br><span class="line">minNotCircular = min(minNotCircular, currentSum)</span><br><span class="line">&#125;</span><br><span class="line">maxCircular := totalSum - minNotCircular</span><br><span class="line"><span class="keyword">if</span> maxNotCircular &gt; maxCircular &#123;</span><br><span class="line"><span class="keyword">return</span> maxNotCircular</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxCircular</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">min</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">if</span> a &lt; b &#123;</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-12"><a href="#结果-12" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 41 ms, 击败 89.36% 使用 Go 的用户</p><p>内存消耗 : 6.87 MB, 击败 60.00% 使用 Go 的用户</p><hr><h2 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">@param</span> &#123;Integer[]&#125; nums</span></span><br><span class="line"><span class="comment"># <span class="doctag">@return</span> &#123;Integer&#125;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">max_subarray_sum_circular</span>(<span class="params">nums</span>)</span><br><span class="line">    n = nums.length</span><br><span class="line">    <span class="keyword">return</span> nums[<span class="number">0</span>] <span class="keyword">if</span> n == <span class="number">1</span></span><br><span class="line">    total_sum = <span class="number">0</span></span><br><span class="line">    max_not_circular = current_sum = nums[<span class="number">0</span>]</span><br><span class="line">    total_sum = nums[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>...n</span><br><span class="line">        current_sum = [nums[i], current_sum + nums[i]].max</span><br><span class="line">        max_not_circular = [max_not_circular, current_sum].max</span><br><span class="line">        total_sum += nums[i]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    min_not_circular = current_sum = nums[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>...(n - <span class="number">1</span>)</span><br><span class="line">        current_sum = [nums[i], current_sum + nums[i]].min</span><br><span class="line">        min_not_circular = [min_not_circular, current_sum].min</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    max_circular = total_sum - min_not_circular</span><br><span class="line">    [max_not_circular, max_circular].max</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="结果-13"><a href="#结果-13" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 119 ms, 击败 77.78% 使用 Ruby 的用户</p><p>内存消耗 : 210.67 MB, 击败 66.67% 使用 Ruby 的用户</p><hr><h2 id="Scala"><a href="#Scala" class="headerlink" title="Scala"></a>Scala</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">maxSubarraySumCircular</span></span>(nums: <span class="type">Array</span>[<span class="type">Int</span>]): <span class="type">Int</span> = &#123;</span><br><span class="line">    <span class="keyword">val</span> n = nums.length</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> nums(<span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> totalSum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> maxNotCircular = nums(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">var</span> currentSum = nums(<span class="number">0</span>)</span><br><span class="line">    totalSum = nums(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> (i &lt;- <span class="number">1</span> until n) &#123;</span><br><span class="line">      currentSum = math.max(nums(i), currentSum + nums(i))</span><br><span class="line">      maxNotCircular = math.max(maxNotCircular, currentSum)</span><br><span class="line">      totalSum += nums(i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> minNotCircular = nums(<span class="number">0</span>)</span><br><span class="line">    currentSum = nums(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> (i &lt;- <span class="number">1</span> until n - <span class="number">1</span>) &#123;</span><br><span class="line">      currentSum = math.min(nums(i), currentSum + nums(i))</span><br><span class="line">      minNotCircular = math.min(minNotCircular, currentSum)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">val</span> maxCircular = totalSum - minNotCircular</span><br><span class="line">    math.max(maxNotCircular, maxCircular)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-14"><a href="#结果-14" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 631 ms, 击败 100.00% 使用 Scala 的用户</p><p>内存消耗 : 64.49 MB, 击败 50.00% 使用 Scala 的用户</p><hr><h2 id="Rust"><a href="#Rust" class="headerlink" title="Rust"></a>Rust</h2><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">impl</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">pub</span> <span class="keyword">fn</span> <span class="title function_">max_subarray_sum_circular</span>(nums: <span class="type">Vec</span>&lt;<span class="type">i32</span>&gt;) <span class="punctuation">-&gt;</span> <span class="type">i32</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">n</span> = nums.<span class="title function_ invoke__">len</span>();</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">total_sum</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">max_not_circular</span> = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">current_sum</span> = nums[<span class="number">0</span>];</span><br><span class="line">        total_sum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">1</span>..n &#123;</span><br><span class="line">            current_sum = <span class="type">i32</span>::<span class="title function_ invoke__">max</span>(nums[i], current_sum + nums[i]);</span><br><span class="line">            max_not_circular = <span class="type">i32</span>::<span class="title function_ invoke__">max</span>(max_not_circular, current_sum);</span><br><span class="line">            total_sum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> <span class="keyword">mut </span><span class="variable">min_not_circular</span> = nums[<span class="number">0</span>];</span><br><span class="line">        current_sum = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> <span class="variable">i</span> <span class="keyword">in</span> <span class="number">1</span>..n - <span class="number">1</span> &#123;</span><br><span class="line">            current_sum = <span class="type">i32</span>::<span class="title function_ invoke__">min</span>(nums[i], current_sum + nums[i]);</span><br><span class="line">            min_not_circular = <span class="type">i32</span>::<span class="title function_ invoke__">min</span>(min_not_circular, current_sum);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> <span class="variable">max_circular</span> = total_sum - min_not_circular;</span><br><span class="line">        <span class="type">i32</span>::<span class="title function_ invoke__">max</span>(max_not_circular, max_circular)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果-15"><a href="#结果-15" class="headerlink" title="结果"></a>结果</h3><p>执行用时 : 7 ms, 击败 77.78% 使用 Rust 的用户</p><p>内存消耗 : 2.48 MB, 击败 44.44% 使用 Rust 的用户</p><hr><h2 id="Racket"><a href="#Racket" class="headerlink" title="Racket"></a>Racket</h2><p>暂时未解决</p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结果-16"><a href="#结果-16" class="headerlink" title="结果"></a>结果</h3><p>执行用时 :  ms, 击败 % 使用 Racket 的用户</p><p>内存消耗 :  MB, 击败 % 使用 Racket 的用户</p><hr><h2 id="Erlang"><a href="#Erlang" class="headerlink" title="Erlang"></a>Erlang</h2><p>暂时未解决</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结果-17"><a href="#结果-17" class="headerlink" title="结果"></a>结果</h3><p>执行用时 :  ms, 击败 % 使用 Erlang 的用户</p><p>内存消耗 :  MB, 击败 % 使用 Erlang 的用户</p><hr><h2 id="Elixir"><a href="#Elixir" class="headerlink" title="Elixir"></a>Elixir</h2><p>暂时未解决</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结果-18"><a href="#结果-18" class="headerlink" title="结果"></a>结果</h3><p>执行用时 :  ms, 击败 % 使用 Elixir 的用户</p><p>内存消耗 :  MB, 击败 % 使用 Elixir 的用户</p><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;环形子数组的最大和、队列、数组、分治、动态规划、单调队列、中等&lt;/center&gt;</summary>
    
    
    
    <category term="语言" scheme="https://blog.mhxcalfred.com/categories/%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="算法" scheme="https://blog.mhxcalfred.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="LeetCode" scheme="https://blog.mhxcalfred.com/tags/LeetCode/"/>
    
    <category term="C++" scheme="https://blog.mhxcalfred.com/tags/C/"/>
    
    <category term="Java" scheme="https://blog.mhxcalfred.com/tags/Java/"/>
    
    <category term="Python" scheme="https://blog.mhxcalfred.com/tags/Python/"/>
    
    <category term="Python3" scheme="https://blog.mhxcalfred.com/tags/Python3/"/>
    
    <category term="C" scheme="https://blog.mhxcalfred.com/tags/C/"/>
    
    <category term="C#" scheme="https://blog.mhxcalfred.com/tags/C/"/>
    
    <category term="JavaScript" scheme="https://blog.mhxcalfred.com/tags/JavaScript/"/>
    
    <category term="TypeScript" scheme="https://blog.mhxcalfred.com/tags/TypeScript/"/>
    
    <category term="PHP" scheme="https://blog.mhxcalfred.com/tags/PHP/"/>
    
    <category term="Swift" scheme="https://blog.mhxcalfred.com/tags/Swift/"/>
    
    <category term="Kotlin" scheme="https://blog.mhxcalfred.com/tags/Kotlin/"/>
    
    <category term="Dart" scheme="https://blog.mhxcalfred.com/tags/Dart/"/>
    
    <category term="Go" scheme="https://blog.mhxcalfred.com/tags/Go/"/>
    
    <category term="Ruby" scheme="https://blog.mhxcalfred.com/tags/Ruby/"/>
    
    <category term="Scala" scheme="https://blog.mhxcalfred.com/tags/Scala/"/>
    
    <category term="Rust" scheme="https://blog.mhxcalfred.com/tags/Rust/"/>
    
    <category term="Racket" scheme="https://blog.mhxcalfred.com/tags/Racket/"/>
    
    <category term="Erlang" scheme="https://blog.mhxcalfred.com/tags/Erlang/"/>
    
    <category term="Elixir" scheme="https://blog.mhxcalfred.com/tags/Elixir/"/>
    
  </entry>
  
  <entry>
    <title>大寒</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/661a5e236c19/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/661a5e236c19/</id>
    <published>2024-01-20T14:07:08.000Z</published>
    <updated>2024-02-04T08:26:53.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>大寒</p></div><div style="text-align:center;">  <img src="/zh-CN/661a5e236c19/202401200001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、大寒&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="大寒" scheme="https://blog.mhxcalfred.com/tags/%E5%A4%A7%E5%AF%92/"/>
    
  </entry>
  
  <entry>
    <title>小寒</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/422f244fa21d/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/422f244fa21d/</id>
    <published>2024-01-05T20:49:09.000Z</published>
    <updated>2024-01-20T14:07:08.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>小寒</p></div><div style="text-align:center;">  <img src="/zh-CN/422f244fa21d/202401060001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、小寒&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="小寒" scheme="https://blog.mhxcalfred.com/tags/%E5%B0%8F%E5%AF%92/"/>
    
  </entry>
  
  <entry>
    <title>元旦</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/355492638183/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/355492638183/</id>
    <published>2023-12-31T16:00:00.000Z</published>
    <updated>2023-12-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>元旦快乐</p></div><div style="text-align:center;">  <img src="/zh-CN/355492638183/202401010001.png" class="" title="纪念日"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、元旦&lt;/center&gt;</summary>
    
    
    
    <category term="纪念日" scheme="https://blog.mhxcalfred.com/categories/%E7%BA%AA%E5%BF%B5%E6%97%A5/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="元旦" scheme="https://blog.mhxcalfred.com/tags/%E5%85%83%E6%97%A6/"/>
    
  </entry>
  
  <entry>
    <title>冬至</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/5ff41316e5b6/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/5ff41316e5b6/</id>
    <published>2023-12-22T03:27:09.000Z</published>
    <updated>2024-01-05T20:49:09.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>冬至</p></div><div style="text-align:center;">  <img src="/zh-CN/5ff41316e5b6/202312220001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、冬至&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="冬至" scheme="https://blog.mhxcalfred.com/tags/%E5%86%AC%E8%87%B3/"/>
    
  </entry>
  
  <entry>
    <title>大雪</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/bd35778da1a1/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/bd35778da1a1/</id>
    <published>2023-12-07T09:32:44.000Z</published>
    <updated>2023-12-22T03:27:09.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>大雪</p></div><div style="text-align:center;">  <img src="/zh-CN/bd35778da1a1/202312070001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、大雪&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="大雪" scheme="https://blog.mhxcalfred.com/tags/%E5%A4%A7%E9%9B%AA/"/>
    
  </entry>
  
  <entry>
    <title>小雪</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/a7b00393f449/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/a7b00393f449/</id>
    <published>2023-11-22T14:02:29.000Z</published>
    <updated>2023-12-07T09:32:44.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>小雪</p></div><div style="text-align:center;">  <img src="/zh-CN/a7b00393f449/202311220001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、小雪&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="小雪" scheme="https://blog.mhxcalfred.com/tags/%E5%B0%8F%E9%9B%AA/"/>
    
  </entry>
  
  <entry>
    <title>34岁生日快乐</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/565f07d3f38a/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/565f07d3f38a/</id>
    <published>2023-11-15T03:15:00.000Z</published>
    <updated>2023-11-15T03:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>生日快乐</p></div><div style="text-align:center;">  <a href="/anniversary/">    <img src="/zh-CN/565f07d3f38a/202311150001.svg" class="" title="纪念日">  </a></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、生日&lt;/center&gt;</summary>
    
    
    
    <category term="纪念日" scheme="https://blog.mhxcalfred.com/categories/%E7%BA%AA%E5%BF%B5%E6%97%A5/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="生日" scheme="https://blog.mhxcalfred.com/tags/%E7%94%9F%E6%97%A5/"/>
    
  </entry>
  
  <entry>
    <title>立冬</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/2a427483600c/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/2a427483600c/</id>
    <published>2023-11-07T16:35:23.000Z</published>
    <updated>2023-11-22T14:02:29.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>立冬</p></div><div style="text-align:center;">  <img src="/zh-CN/2a427483600c/202311080001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、立冬&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="立冬" scheme="https://blog.mhxcalfred.com/tags/%E7%AB%8B%E5%86%AC/"/>
    
  </entry>
  
  <entry>
    <title>霜降</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/e08a92913d48/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/e08a92913d48/</id>
    <published>2023-10-23T16:20:39.000Z</published>
    <updated>2023-11-07T16:35:23.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>霜降</p></div><div style="text-align:center;">  <img src="/zh-CN/e08a92913d48/202310240001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、霜降&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="霜降" scheme="https://blog.mhxcalfred.com/tags/%E9%9C%9C%E9%99%8D/"/>
    
  </entry>
  
  <entry>
    <title>寒露</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/4939359fa5b2/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/4939359fa5b2/</id>
    <published>2023-10-08T13:15:23.000Z</published>
    <updated>2023-10-23T16:20:39.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>寒露</p></div><div style="text-align:center;">  <img src="/zh-CN/4939359fa5b2/202310080001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、寒露&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="寒露" scheme="https://blog.mhxcalfred.com/tags/%E5%AF%92%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>秋分</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/d927087b0d9e/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/d927087b0d9e/</id>
    <published>2023-09-23T06:49:46.000Z</published>
    <updated>2023-10-08T13:15:23.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>秋分</p></div><div style="text-align:center;">  <img src="/zh-CN/d927087b0d9e/202309230001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、秋分&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="秋分" scheme="https://blog.mhxcalfred.com/tags/%E7%A7%8B%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>白露</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/f4f59831c41f/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/f4f59831c41f/</id>
    <published>2023-09-07T21:26:31.000Z</published>
    <updated>2023-09-23T06:49:46.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>白露</p></div><div style="text-align:center;">  <img src="/zh-CN/f4f59831c41f/202309080001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、白露&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="白露" scheme="https://blog.mhxcalfred.com/tags/%E7%99%BD%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>处暑</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/afc2fa3d7a10/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/afc2fa3d7a10/</id>
    <published>2023-08-23T09:01:06.000Z</published>
    <updated>2023-09-07T21:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>处暑</p></div><div style="text-align:center;">  <img src="/zh-CN/afc2fa3d7a10/202308230001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、处暑&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="处暑" scheme="https://blog.mhxcalfred.com/tags/%E5%A4%84%E6%9A%91/"/>
    
  </entry>
  
  <entry>
    <title>立秋</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/71df9781daa5/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/71df9781daa5/</id>
    <published>2023-08-07T18:22:41.000Z</published>
    <updated>2023-08-23T09:01:06.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>立秋</p></div><div style="text-align:center;">  <img src="/zh-CN/71df9781daa5/202308080001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、立秋&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="立秋" scheme="https://blog.mhxcalfred.com/tags/%E7%AB%8B%E7%A7%8B/"/>
    
  </entry>
  
  <entry>
    <title>大暑</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/6e6de2fb203a/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/6e6de2fb203a/</id>
    <published>2023-07-23T01:50:15.000Z</published>
    <updated>2023-08-07T18:22:41.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>大暑</p></div><div style="text-align:center;">  <img src="/zh-CN/6e6de2fb203a/202307230001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、大暑&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="大暑" scheme="https://blog.mhxcalfred.com/tags/%E5%A4%A7%E6%9A%91/"/>
    
  </entry>
  
  <entry>
    <title>小暑</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/59ae923aabef/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/59ae923aabef/</id>
    <published>2023-07-07T08:30:29.000Z</published>
    <updated>2023-07-23T01:50:15.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>小暑</p></div><div style="text-align:center;">  <img src="/zh-CN/59ae923aabef/202307070001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、小暑&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="小暑" scheme="https://blog.mhxcalfred.com/tags/%E5%B0%8F%E6%9A%91/"/>
    
  </entry>
  
  <entry>
    <title>夏至</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/f8cd234d52a7/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/f8cd234d52a7/</id>
    <published>2023-06-21T14:57:37.000Z</published>
    <updated>2023-07-07T08:30:29.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>夏至</p></div><div style="text-align:center;">  <img src="/zh-CN/f8cd234d52a7/202306210001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、夏至&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="夏至" scheme="https://blog.mhxcalfred.com/tags/%E5%A4%8F%E8%87%B3/"/>
    
  </entry>
  
  <entry>
    <title>芒种</title>
    <link href="https://blog.mhxcalfred.com/zh-CN/d334dd1c4202/"/>
    <id>https://blog.mhxcalfred.com/zh-CN/d334dd1c4202/</id>
    <published>2023-06-05T22:18:10.000Z</published>
    <updated>2023-06-21T14:57:37.000Z</updated>
    
    <content type="html"><![CDATA[<hr><style>  #biaoti {    text-align: center;    padding: 20px;    font-size: 48px;  }</style><div id="biaoti">  <p>芒种</p></div><div style="text-align:center;">  <img src="/zh-CN/d334dd1c4202/202306060001.webp" class="" title="节气"></div><hr>]]></content>
    
    
    <summary type="html">&lt;center&gt;日常、芒种&lt;/center&gt;</summary>
    
    
    
    <category term="节气" scheme="https://blog.mhxcalfred.com/categories/%E8%8A%82%E6%B0%94/"/>
    
    
    <category term="日常" scheme="https://blog.mhxcalfred.com/tags/%E6%97%A5%E5%B8%B8/"/>
    
    <category term="芒种" scheme="https://blog.mhxcalfred.com/tags/%E8%8A%92%E7%A7%8D/"/>
    
  </entry>
  
</feed>
